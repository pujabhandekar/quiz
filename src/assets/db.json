{
  "questions": [
    {
      "questionText": "Which of the following does TypeScript use to specify types?",
      "options": [
        {
          "text": ":",
          "correct": true
        },
        {
          "text": ";"
        },
        {
          "text": "!"
        },
        {
          "text": "&"
        }
      ],
      "explanation": "TS uses a colon (:) to separate the property name from the property type"
    },
    {
      "questionText": "Which of the following is NOT a type used in TypeScript?",
      "options": [
        {
          "text": "number"
        },
        {
          "text": "string"
        },
        {
          "text": "boolean"
        },
        {
          "text": "enum",
          "correct": true
        }
      ],
      "explanation": "enum is not used as a type in TypeScript"
    },
    {
      "questionText": "How can we specify properties and methods for an object in TypeScript?",
      "options": [
        {
          "text": "Use classes."
        },
        {
          "text": "Use interfaces.",
          "correct": true
        },
        {
          "text": "Use enums."
        },
        {
          "text": "Use async/await."
        }
      ],
      "explanation": "interfaces are typically used to list the properties and methods for an object"
    },
    {
      "questionText": "How else can Array<number> be written in TypeScript?",
      "options": [
        {
          "text": "@number"
        },
        {
          "text": "number[]",
          "correct": true
        },
        {
          "text": "number!"
        },
        {
          "text": "number?"
        }
      ],
      "explanation": "number[] is another way of writing Array<number> in TypeScript"
    },
    {
      "questionText": "In which of these does a class take parameters?",
      "options": [
        {
          "text": "constructor",
          "correct": true
        },
        {
          "text": "destructor"
        },
        {
          "text": "import"
        },
        {
          "text": "subscribe"
        }
      ],
      "explanation": "a constructor is used by a class to take in parameters"
    },
    {
      "questionText": "Which is NOT an access modifier?",
      "options": [
        {
          "text": "private"
        },
        {
          "text": "protected"
        },
        {
          "text": "public"
        },
        {
          "text": "async",
          "correct": true
        }
      ],
      "explanation": "async is not used as an access modifier type in TypeScript"
    },
    {
      "questionText": "Which keyword allows us to share information between files in TypeScript?",
      "options": [
        {
          "text": "import"
        },
        {
          "text": "export",
          "correct": true
        },
        {
          "text": "async"
        },
        {
          "text": "constructor"
        }
      ],
      "explanation": "the export keyword allows for the information to be transmitted between files"
    },
    {
      "questionText": "Which is an array method to generate a new array based on a condition?",
      "options": [
        {
          "text": "filter",
          "correct": true
        },
        {
          "text": "map"
        },
        {
          "text": "async"
        },
        {
          "text": "enum"
        }
      ],
      "explanation": "filter is a method used to conditionally create a new array"
    },
    {
      "questionText": "How is a property accessible within a class?",
      "options": [
        {
          "text": "Using this.propertyName",
          "correct": true
        },
        {
          "text": "Accessors"
        },
        {
          "text": "Destructuring"
        },
        {
          "text": "Arrow function"
        }
      ],
      "explanation": "this.propertyName is the way to access a specific property within a class"
    }
  ],
  "users": [
    {
      "id": 1
    },
    {
      "Name": "puja",
      "Email": "puja@gmail.com",
      "password": "12345",
      "id": 2
    },
    {
      "Name": "shiva bhandekar",
      "Email": "shiva@gmail.com",
      "password": "123",
      "id": 3
    },
    {
      "Name": "anitha",
      "Email": "anitha@gmail.com",
      "password": "789",
      "id": 4
    },
    {
      "Name": "frog",
      "Email": "frog@gmail.com",
      "password": "561",
      "id": 5
    },
    {
      "Name": "dolly crazy",
      "Email": "doll@gmail.com",
      "password": "12345",
      "id": 6
    },
    {
      "Name": "catty",
      "Email": "catty@gmail.com",
      "password": "123",
      "id": 7
    },
    {
      "Name": "monika",
      "Email": "mouika@gmail.com",
      "password": "123",
      "id": 8
    },
    {
      "Name": "mount",
      "Email": "mount@gmail.com",
      "password": "123",
      "id": 9
    },
    {
      "Name": "raj kishor",
      "Email": "raj@gmail.com",
      "password": "12345",
      "id": 10
    },
    {
      "Name": "puja",
      "Email": "puja1@gmail.com",
      "password": "123456",
      "id": 11
    },
    {
      "Name": "shiva bhandekar",
      "Email": "shiva2000@",
      "password": "shiva123",
      "id": 12
    },
    {
      "Name": "jerry",
      "Email": "jerry@gmail.com",
      "password": "12345",
      "id": 13
    },
    {
      "Name": "poo",
      "Email": "poo@gmail.com",
      "password": "12345",
      "id": 14
    },
    {
      "Name": "anitha1",
      "Email": "anitha1@gmail.com",
      "password": "123",
      "id": 15
    },
    {
      "Name": "anitha1",
      "Email": "anitha1@gmail.com",
      "password": "123456",
      "id": 16
    },
    {
      "Name": "joo",
      "Email": "joo1@gmail.com",
      "password": "123456",
      "id": 17
    },
    {
      "Name": "zoo",
      "Email": "zoo@gmail.com",
      "password": "123",
      "id": 18
    },
    {
      "Name": "rajubhandekar",
      "Email": "raju11@gmail.com",
      "password": "123",
      "id": 19
    },
    {
      "Name": "Raj Kishore",
      "Email": "rajk123@gmail.com",
      "password": "12345",
      "id": 20
    }
  ],
  "question": [
    {
      "questionText": "Which of the following is NOT a type used in TypeScript?",
      "options": [
        {
          "text": "number"
        },
        {
          "text": "string"
        },
        {
          "text": "enum",
          "correct": true
        },
        {
          "text": "boolean"
        }
      ],
      "explanation": "enum is not used as a type in TypeScript"
    },
    {
      "questionText": "Which of the following does TypeScript use to specify types?",
      "options": [
        {
          "text": ";"
        },
        {
          "text": "!"
        },
        {
          "text": ":",
          "correct": true
        },
        {
          "text": "&"
        }
      ],
      "explanation": "TS uses a colon (:) to separate the property name from the property type"
    },
    {
      "questionText": "In which of these does a class take parameters?",
      "options": [
        {
          "text": "import"
        },
        {
          "text": "destructor"
        },
        {
          "text": "subscribe"
        },
        {
          "text": "constructor",
          "correct": true
        }
      ],
      "explanation": "a constructor is used by a class to take in parameters"
    },
    {
      "questionText": "How can we specify properties and methods for an object in TypeScript?",
      "options": [
        {
          "text": "Use classes."
        },
        {
          "text": "Use enums."
        },
        {
          "text": "Use interfaces.",
          "correct": true
        },
        {
          "text": "Use async/await."
        }
      ],
      "explanation": "interfaces are typically used to list the properties and methods for an object"
    },
    {
      "questionText": "How else can Array<number> be written in TypeScript?",
      "options": [
        {
          "text": "@number"
        },
        {
          "text": "number!"
        },
        {
          "text": "number?"
        },
        {
          "text": "number[]",
          "correct": true
        }
      ],
      "explanation": "number[] is another way of writing Array<number> in TypeScript"
    },
    {
      "questionText": "Which is NOT an access modifier?",
      "options": [
        {
          "text": "private"
        },
        {
          "text": "protected"
        },
        {
          "text": "async",
          "correct": true
        },
        {
          "text": "public"
        }
      ],
      "explanation": "async is not used as an access modifier type in TypeScript"
    },
    {
      "questionText": "How is a property accessible within a class?",
      "options": [
        {
          "text": "Using this.propertyName",
          "correct": true
        },
        {
          "text": "Accessors"
        },
        {
          "text": "Destructuring"
        },
        {
          "text": "Arrow function"
        }
      ],
      "explanation": "this.propertyName is the way to access a specific property within a class"
    },
    {
      "questionText": "Which keyword allows us to share information between files in TypeScript?",
      "options": [
        {
          "text": "export",
          "correct": true
        },
        {
          "text": "async"
        },
        {
          "text": "constructor"
        },
        {
          "text": "import"
        }
      ],
      "explanation": "the export keyword allows for the information to be transmitted between files"
    },
    {
      "questionText": "Which is an array method to generate a new array based on a condition?",
      "options": [
        {
          "text": "filter",
          "correct": true
        },
        {
          "text": "map"
        },
        {
          "text": "async"
        },
        {
          "text": "enum"
        }
      ],
      "explanation": "filter is a method used to conditionally create a new array"
    }
  ],
  "leaderBoard": [
    {
      "Name": "puja",
      "Rank": "1",
      "TotalScore": "80",
      "id": 1
    },
    {
      "Name": "shiva bhandekar",
      "Rank": "2",
      "TotalScore": "70",
      "id": 2
    },
    {
      "Name": "jerry",
      "Rank": "3",
      "TotalScore": "60",
      "id": 3
    },
    {
      "Name": "derry",
      "Rank": "1",
      "TotalScore": "90",
      "id": 4
    },
    {
      "Name": "dolly crazy",
      "Rank": "3",
      "TotalScore": "60",
      "id": 5
    }
  ]
}